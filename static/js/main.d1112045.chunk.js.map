{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-actions.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","title","children","className","s","container","getContacts","state","phonebook","contacts","getFilter","filter","getVisibleContacts","allContacts","console","log","normalizedFilter","toLowerCase","name","includes","addContact","createAction","number","payload","id","shortid","generate","deleteContact","changeFilter","Filter","value","useSelector","dispatch","useDispatch","label","type","onChange","event","target","placeholder","input","ContactForm","useState","setName","setNumber","handleChange","e","resetForm","onSubmit","preventDefault","find","contact","isNameExist","isNumberExist","search","isName","toast","error","isNumber","trim","isQueryEmpty","warning","form","onKeyPress","charCode","window","which","keyCode","button","propTyper","PropTypes","func","isRequired","ContactList","length","list","map","item","onClick","onDeleteContact","App","autoClose","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,mBCA7FD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,oKCgBfC,MAdf,YAAyC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC1B,OACE,sBAAKC,UAAWC,IAAEC,UAAlB,UACGJ,GAAS,6BAAKA,IACdC,MCPMI,EAAc,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,UACvCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,UAAUG,QAErCC,EAAqB,SAAAL,GAChC,IAAMM,EAAcP,EAAYC,GAChCO,QAAQC,IAAIF,GACZ,IACMG,EADSN,EAAUH,GACOU,cAEhC,OAAOJ,EAAYF,QAAO,qBAAGO,KACtBD,cAAcE,SAASH,O,wBCPnBI,EAAaC,YAAa,iBAAiB,SAACH,EAAMI,GAAP,MAAmB,CACzEC,QAAS,CACPC,GAAIC,IAAQC,WACZR,OACAI,cAISK,EAAgBN,YAAa,oBAE7BO,EAAeP,YAAa,0B,iBCS1BQ,MAjBf,WACE,IAAMC,EAAQC,YAAYrB,GACpBsB,EAAWC,cACjB,OACE,wBAAO9B,UAAWC,IAAE8B,MAApB,iCAEE,uBACEC,KAAK,OACLL,MAAOA,EACPM,SAAU,SAAAC,GAAK,OAAIL,EAASJ,EAAaS,EAAMC,OAAOR,SACtDS,YAAY,wBACZpC,UAAWC,IAAEoC,Y,yCCPrB,SAASC,IAAe,IAAD,EACGC,mBAAS,IADZ,mBACdxB,EADc,KACRyB,EADQ,OAEOD,mBAAS,IAFhB,mBAEdpB,EAFc,KAENsB,EAFM,KAGfZ,EAAWC,cACXxB,EAAWsB,YAAYzB,GAEvBuC,EAAe,SAAAC,GAAM,IAAD,EACAA,EAAER,OAAlBpB,EADgB,EAChBA,KAAMY,EADU,EACVA,MACd,OAAQZ,GACN,IAAK,OACHyB,EAAQb,GACR,MACF,IAAK,SACHc,EAAUd,GACV,MACF,QACE,SAgEAiB,EAAY,WAChBJ,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMI,SAxBa,SAAAF,GACnBA,EAAEG,kBAhCgB,SAAA/B,GAClB,OAAOT,EAASyC,MACd,SAAAC,GAAO,OAAIA,EAAQjC,KAAKD,gBAAkBC,EAAKD,iBA+B7CmC,CAAYlC,IA5BI,SAAAI,GACpB,OAAOb,EAASyC,MAAK,SAAAC,GAAO,OAAIA,EAAQ7B,SAAWA,KA6BxC+B,CAAc/B,IAEG,IA3Cf,SAAAJ,GAEb,GAAGA,EAAKoC,OADM,eAEd,OAAO,EAwCIC,CAAOrC,GAChBsC,IAAMC,MAAM,yBACkB,IAnDjB,SAAAnC,GAEf,GAAGA,EAAOgC,OADI,iBAEd,OAAO,EAgDII,CAASpC,GAClBkC,IAAMC,MAAM,yBA/BK,SAACvC,EAAMI,GAC1B,MAAuB,KAAhBJ,EAAKyC,QAAmC,KAAlBrC,EAAOqC,OA+BzBC,CAAa1C,EAAMI,GAG5BU,EAASZ,EAAWF,EAAMI,IAF1BkC,IAAMC,MAAM,yBANZD,IAAMK,QAAQ,gCAFdL,IAAMK,QAAQ,8BAYhBd,KAS8B5C,UAAWC,IAAE0D,KAA3C,UACE,wBAAO3D,UAAWC,IAAE8B,MAApB,iBAEE,uBACEC,KAAK,OACLjB,KAAK,OACLqB,YAAY,aACZT,MAAOZ,EACPkB,SAAUS,EACV1C,UAAWC,IAAEoC,MACbuB,WA3CY,SAAAjB,GAElB,IAAMkB,GADNlB,EAAKA,GAASmB,OAAO5B,OACA6B,MAASpB,EAAEoB,MAAQpB,EAAEqB,QAC1C,QAAKH,EAAW,IAAMA,EAAW,OAAQA,EAAW,IAAMA,EAAW,MAAsB,KAAbA,GACrER,IAAMK,QAAQ,mCA0CrB,wBAAO1D,UAAWC,IAAE8B,MAApB,mBAEE,uBACEC,KAAK,MACLjB,KAAK,SACLqB,YAAY,qBACZT,MAAOR,EACPc,SAAUS,EACV1C,UAAWC,IAAEoC,MACbuB,WAhEY,SAAAjB,GAElB,IAAMkB,GADNlB,EAAKA,GAASmB,OAAO5B,OACD6B,MAASpB,EAAEoB,MAAQpB,EAAEqB,QACzC,QAAIH,EAAW,KAAOA,EAAW,IAAMA,EAAW,MACzCR,IAAMK,QAAQ,mCA+DrB,wBAAQ1B,KAAK,SAAShC,UAAWC,IAAEgE,OAAnC,4BAON3B,EAAY4B,UAAY,CACtBrB,SAAUsB,IAAUC,KAAKC,YAGZ/B,Q,iBCtFAgC,MAvCf,WACE,IAAMhE,EAAWsB,YAAYnB,GACvBoB,EAAWC,cAIjB,OACE,qCACuB,IAApBxB,EAASiE,QAAgB,8CAC1B,oBAAIvE,UAAWC,IAAEuE,KAAjB,SACGlE,EAASmE,KAAI,gBAAGpD,EAAH,EAAGA,GAAIN,EAAP,EAAOA,KAAMI,EAAb,EAAaA,OAAb,OACZ,qBAAInB,UAAWC,IAAEyE,KAAjB,UACE,8BACG3D,EADH,KACWI,KAEX,wBACEa,KAAK,SACLhC,UAAWC,IAAEgE,OACbU,QAAS,kBAdG,SAAAtD,GAAE,OAAIQ,EAASL,EAAcH,IAc1BuD,CAAgBvD,IAHjC,sBAJ0BA,YCMvBwD,I,EAAAA,EAhBf,WACE,OACE,gCACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,OAEF,eAAC,EAAD,CAAW/E,MAAM,WAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,IAAD,CAAgBgF,UAAW,U,gECd3BxE,EAAWyE,YAAc,IAAD,mBAC3B9D,GAAa,SAACb,EAAD,OAAUgB,EAAV,EAAUA,QAAV,4BAA4BhB,GAA5B,CAAmCgB,OADrB,cAE3BI,GAAgB,SAACpB,EAAD,OAAUgB,EAAV,EAAUA,QAAV,OACfhB,EAAMI,QAAO,qBAAGa,KAAgBD,QAHN,IAMxBZ,EAASuE,YAAc,GAAD,eACzBtD,GAAe,SAACuD,EAAD,YAAM5D,YAGT6D,cAAgB,CAC7B3E,WACAE,WCDI0E,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAyB,CAC7BC,IAAK,YACLC,YACAC,UAAW,CAAC,WAGDC,EAAQC,YAAe,CAClCC,QAAS,CACP9F,UAAW+F,YAAeP,EAAwBQ,IAEpDnB,aACAoB,UAAUC,IAGCC,EAAYC,YAAaR,GC1BvBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUpB,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaqB,QAAS,KAAMd,UAAWA,EAAvC,SACE,cAAC,EAAD,UAINe,SAASC,eAAe,SAM1Bd,K,kBCxBA/G,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,+B","file":"static/js/main.d1112045.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3cB9H\",\"item\":\"ContactList_item__2vGgK\",\"button\":\"ContactList_button__atfTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__VqnqR\",\"input\":\"Filter_input__VtWMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2yJlW\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","export const getContacts = state => state.phonebook.contacts;\nexport const getFilter = state => state.phonebook.filter;\n\nexport const getVisibleContacts = state => {\n  const allContacts = getContacts(state);\n  console.log(allContacts);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nexport const addContact = createAction('phonebook/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction('phonebook/delete');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={event => dispatch(changeFilter(event.target.value))}\n        placeholder=\"Enter name for search\"\n        className={s.input}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\r\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const isNumber = number => {\r\n    const check = /^[-+]?[0-9]+$/;\r\n    if(number.search(check)) {\r\n    return true;\r\n    };\r\n  };\r\n  const isName = name => {\r\n    const check = /^[A-Za-z]+$/;\r\n    if(name.search(check)) {\r\n    return true;\r\n    };\r\n  };\r\n  const isNameExist = name => {\r\n    return contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n  };\r\n  const isNumberExist = number => {\r\n    return contacts.find(contact => contact.number === number);\r\n  };\r\n\r\n  const isQueryEmpty = (name, number) => {\r\n    return name.trim() === '' || number.trim() === '';\r\n  };\r\n  \r\n  const onKeyNumber = e => {\r\n    e = (e) ? e : window.event;\r\n    const charCode = (e.which) ? e.which : e.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return toast.warning('Please input numbers only');\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const onKeyLetter = e => {\r\n    e = (e) ? e : window.event;\r\n    const charCode  = (e.which) ? e.which : e.keyCode;\r\n    if ((charCode < 65 || charCode > 90) && (charCode < 97 || charCode > 123) && (charCode !== 32)) {\r\n      return toast.warning('Please input letters only');\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (isNameExist(name)) {\r\n      toast.warning('This name is already exist');\r\n    } else if (isNumberExist(number)) {\r\n      toast.warning('This number is already exist');\r\n    } else if (isName(name) === true) {\r\n      toast.error('Only letters allowed');\r\n    } else if (isNumber(number) === true) {\r\n      toast.error('Only numbers allowed');  \r\n    } else if (isQueryEmpty(name, number)) {\r\n      toast.error('Some fields are empty');\r\n    } else {\r\n      dispatch(addContact(name, number));\r\n    }\r\n    resetForm();  \r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          className={s.input}\r\n          onKeyPress={onKeyLetter} \r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Enter phone number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          className={s.input}\r\n          onKeyPress={onKeyNumber} \r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTyper = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\nimport { getVisibleContacts } from '../../redux/phonebook/phonebook-selectors';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      {contacts.length === 0 && <p> No contacts </p>}\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li className={s.item} key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button\n              type=\"button\"\n              className={s.button}\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\n\nfunction App() {\n  return (\n    <div>\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </Container>\n      <Container title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Container>\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions';\n\nconst contacts = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'phonebook',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3UuZD\",\"label\":\"ContactForm_label__3GxCA\",\"input\":\"ContactForm_input__3TF8x\",\"button\":\"ContactForm_button__2OXuE\"};"],"sourceRoot":""}